---
name: build_using_renv__R_4.3.1__py_3.10__bioC_3.17
on:
  workflow_dispatch: null
  pull_request:

jobs:
  build_ubuntu_latest:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install sys deps
        run: |
          sudo apt update && sudo apt install -y libcurl4-openssl-dev \
            libcairo2-dev libssl-dev make  unixodbc-dev libnode-dev \
            libxml2-dev libx11-dev git libfontconfig1-dev libfreetype6-dev \
            zlib1g-dev libglpk-dev libjpeg-dev libmagick++-dev gsfonts \
            cmake libpng-dev libtiff-dev python3 libglu1-mesa-dev libgl1-mesa-dev \
            libgdal-dev gdal-bin libgeos-dev libproj-dev libsqlite3-dev libsodium-dev \
            libicu-dev tcl tk tk-dev tk-table libfribidi-dev libharfbuzz-dev libudunits2-dev
      - name: Set up python (pinned version 3.10)
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Check env and python version
        run: |
          python --version
          echo -e '\n\n'
          env
      - name: Set up R (pinned version 4.3.1)
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.1'
      - name: Set up renv and install renv.lock packages (BioC 3.17)
        uses: r-lib/actions/setup-renv@v2
      - name: Set RENV_PATHS_ROOT
        shell: bash
        run: |
          echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV
      # - name: Install and activate renv
      #   run: |
      #     install.packages("renv")
      #     renv::activate()
      #     shell: Rscript {0}
      - name: Check R and OS version
        id: get-version
        run: |
          cat("##[set-output name=os-version;]", sessionInfo()$running, "\n", sep = "")
          cat("##[set-output name=r-version;]", R.Version()$version.string, sep = "")
          shell: Rscript {0}
      # - name: Restore Renv package cache
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ env.RENV_PATHS_ROOT }}
      #     key: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{ inputs.cache-version }}-${{ hashFiles('renv.lock') }}
      #     restore-keys: ${{ steps.get-version.outputs.os-version }}-${{ steps.get-version.outputs.r-version }}-${{inputs.cache-version }}-
      - name: Check python version - from subshell and renv
        shell: Rscript {0}
        run: |
          renv::status()
          system('python --version')
